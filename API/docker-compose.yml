version: '3.8'

services:
  nginx:
    image: nginx:1.13-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - sensors_service
      - users_service
    networks:
      - internal_network

  models_service:
    image: python:3.11
    ports:
      - "5002:5002"
    command: >
      sh -c "export PYTHONPATH=/src:$PYTHONPATH && python -m ensurepip --upgrade && python -m pip install --upgrade setuptools && python -m ensurepip --upgrade && pip install -r /src/apis/models_requirements.txt && python3 /src/apis/models.py"
    volumes:
      - ./src/apis/:/src/apis
      - ./src/middleware/:/src/middleware
      - ./src/models/:/src/models
      - ./src/DAOS/:/src/DAOS
      - ./saved_model/:/saved_model
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - internal_network

  sensors_service:
    image: python:3.8
    ports:
      - "5000:5000"
    command: >
      sh -c "export PYTHONPATH=/src:$PYTHONPATH && pip install -r /src/apis/requirements.txt && python3 /src/apis/sensors.py"
    volumes:
      - ./src/apis/:/src/apis/
      - ./src/middleware/:/src/middleware
      - ./src/models/:/src/models
      - ./src/DAOS/:/src/DAOS
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - internal_network
  users_service:
    image: python:3.8
    ports:
      - "5001:5001"
    command: >
      sh -c "export PYTHONPATH=/src:$PYTHONPATH && pip install -r /src/apis/requirements.txt && python3 /src/apis/users.py"
    volumes:
      - ./src/apis/:/src/apis
      - ./src/middleware/:/src/middleware
      - ./src/models/:/src/models
      - ./src/DAOS/:/src/DAOS
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - internal_network
  mongodb:
    image: mongo
    ports:
      - "4000:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    command: mongod --bind_ip_all
    volumes:
      - mongo_data_base:/data/db
      - ./init-mongo:/docker-entrypoint-initdb.d
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge
volumes:
  mongo_data_base:
    driver: local